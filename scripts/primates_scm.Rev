################################################################################
#
# RevBayes Example: Bayesian inference of diversification rates under a
#                   conditioned birth-death-shift model
#
#
# authors: Sebastian Hoehna
#
################################################################################

#######################
# Reading in the Data #
#######################

REPLICATE = args[1]

# Read in the observed phylogeny
observed_phylogeny <- readTrees("data/primates.tre")[1]

# Get the names of the taxa in the tree and the age of the tree. We need these later on.
taxa <- observed_phylogeny.taxa()
root <- observed_phylogeny.rootAge()
tree_length <- observed_phylogeny.treeLength()


# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

# Global parameters for our analysis
NUM_TOTAL_SPECIES     = 367
NUM_RATE_CATEGORIES   = 4

####################
# Create the rates #
####################

### Specify a prior on the speciation and extinction rates
#rate_mean <- (NUM_TOTAL_SPECIES-2) / tree_length
eta ~ dnUniform(0.0001, 0.1)
eta.setValue(0.002481505586861777)

lambda = [0.05, 0.2, 0.4, 0.1] 
mu = [0.05, 0.15, 0.10, 0.2]

### Create a uniformly distributed variable for the category at the root
rate_cat_probs <- simplex( rep(1, NUM_RATE_CATEGORIES) )

### rho is the probability of sampling species at the present
### fix this to ntaxa/367, since there are ~367 described species of primates
### and we have sampled 367
rho <- observed_phylogeny.ntips() / NUM_TOTAL_SPECIES

#### construct a variable for the tree drawn from a birth death process
timetree ~ dnCDBDP( rootAge           = root,
                    speciationRates   = lambda,
                    extinctionRates   = mu,
                    Q                 = fnJC(NUM_RATE_CATEGORIES),
                    delta             = eta,
                    pi                = rate_cat_probs,
                    rho               = rho,
                    nTimeSlices       = 2500,
                    condition         = "survival" )

### clamp the model with the "observed" tree
timetree.clamp(observed_phylogeny)


#############
# The Model #
#############

### workspace model wrapper ###
mymodel = model(timetree)

### set up the monitors that will output parameter values to file and screen
monitors.append( mnScreen(printgen=100, eta) )
monitors.append( mnStochasticBranchRate(cdbdp=timetree, printgen=1, filename="output/primates_LSBDS_rates_" + REPLICTE + ".log") )
#monitors.append( mnModel(filename="output/primates_LSBDS.log",printgen=1, separator = TAB) )


################
# The Analysis #
################

### workspace mcmc
mymcmc = mcmc(mymodel, monitors, moves, nruns=1, combine="mixed")

### run the MCMC
mymcmc.run(generations=25000)

## quit ##
q()
